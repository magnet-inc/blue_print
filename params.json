{"name":"BluePrint","tagline":"The behavior switching framework for Rails","body":"[![Gem Version](https://badge.fury.io/rb/blue_print.png)](http://badge.fury.io/rb/blue_print)\r\n[![Build Status](https://travis-ci.org/magnet-inc/blue_print.png?branch=master)](https://travis-ci.org/magnet-inc/blue_print)\r\n[![Coverage Status](https://coveralls.io/repos/magnet-inc/blue_print/badge.png)](https://coveralls.io/r/magnet-inc/blue_print)\r\n[![Code Climate](https://codeclimate.com/github/magnet-inc/blue_print.png)](https://codeclimate.com/github/magnet-inc/blue_print)\r\n\r\nThe behavior switching framework. inspired by [DCI](http://en.wikipedia.org/wiki/Data,_context_and_interaction).\r\n\r\n## Requirements\r\n\r\n- __Ruby__ >= _2.0.0_\r\n  - Tested ruby version:\r\n    - 2.0.0\r\n    - 2.1.0\r\n    - 2.1.1\r\n    - head\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'blue_print', '~> 1.2.0'\r\n```\r\n\r\n## Usage\r\n\r\n### Integration\r\n\r\nBluePrint provides some integrations. Now supported libraries:\r\n\r\n- [Ruby on Rails](http://rubyonrails.org/) >= 3.1\r\n- [Grape](http://intridea.github.io/grape/)\r\n- [Draper](https://github.com/drapergem/draper)\r\n- [RSpec](https://github.com/rspec)\r\n\r\n### Rails Generators\r\n\r\nBluePrint provides a generator to create templates of a context and behaviros.\r\n\r\n```bash\r\n$ rails generate blue_print staff user:staff_user\r\n     create  app/blue_prints/staff_context.rb\r\n     create  app/blue_prints/staff_context/staff_user.rb\r\n     invoke  rspec\r\n     create    spec/blue_prints/staff_context_spec.rb\r\n     create    spec/blue_prints/staff_context/staff_user_spec.rb\r\n```\r\n\r\n### Contexts\r\n\r\nContexts inherit from `BluePrint::Context`, live in your `app/blue_prints` directory.\r\n\r\n#### active_if\r\n\r\nThis block is used to decide if this context active or not. `env` is the `BluePrint.env`. `self` is passed via `BluePrint::Environment#context`. By default, this is set as `active_if { false }`.\r\n\r\n```ruby\r\nclass StaffContext < BluePrint::Context\r\n  active_if do |env|\r\n    current_user.try(:staff?)\r\n  end\r\nend\r\n```\r\n\r\nAnd you can define named active if:\r\n\r\n```ruby\r\n# lib/active_ifs/staff.rb\r\nBluePrint::ActiveIf.new(:staff) do |env|\r\n  current_user.try(:staff?)\r\nend\r\n\r\n# app/blue_prints/staff_context.rb\r\nclass StaffContext < BluePrint::Context\r\n  active_if :staff\r\nend\r\n```\r\n\r\n#### Casting\r\n\r\nContexts has casting. This is used to decide classes cast as behaviors if this context active.\r\n\r\n```ruby\r\nclass StaffContext < BluePrint::Context\r\n  cast ::User, as: [StaffUser]\r\nend\r\n\r\nStaffContext.casting\r\n# =>\r\n#   {\r\n#     User => [ StaffUser ]\r\n#   }\r\n```\r\n\r\n### Behaviors\r\n\r\nBehaviors extended by `BluePrint::Behavior`, live in your `app/blue_prints/{context}` directory.\r\n\r\n```ruby\r\n# app/blue_prints/staff_context/staff_user.rb\r\nmodule StaffContext::StaffUser\r\n  extend BluePrint::Behavior\r\nend\r\n```\r\n\r\n#### Methods\r\n\r\nBehaviors can have some methods.\r\n\r\n```ruby\r\n# app/blue_prints/staff_context/staff_user.rb\r\nmodule StaffContext::StaffUser\r\n  extend BluePrint::Behavior\r\n\r\n  def user_name\r\n    \"staff\"\r\n  end\r\nend\r\n\r\n# app/models/user.rb\r\nclass User < ActiveRecord::Base\r\n  def user_name\r\n    \"#{name} san\"\r\n  end\r\nend\r\n\r\nuser = User.new(name: \"Magnet\")\r\nuser.user_name # => \"Magnet san\"\r\nwithin_context_of(StaffContext) do\r\n  user.user_name # => \"staff\"\r\nend\r\n```\r\n\r\n#### Class Methods\r\n\r\nBehaviors can have some class methods.\r\n\r\n```ruby\r\n# app/blue_prints/staff_context/staff_user.rb\r\nmodule StaffContext::StaffUser\r\n  extend BluePrint::Behavior\r\n\r\n  module ClassMethods\r\n    def find(id)\r\n      where(id: id, staff: true).first!\r\n    end\r\n  end\r\nend\r\n\r\n# app/models/user.rb\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nuser = User.create(staff: false)\r\nUser.find(user.id) == user # => true\r\nwithin_context_of(StaffContext) do\r\n  User.find(user.id) # => raise ActiveRecord::NotFound\r\nend\r\n```\r\n\r\n### Helper\r\n\r\n`BluePrint::Helper` provides `#within_context_of` method.\r\n\r\nThis module includes automatically to some classes. see [lib/blue_print/integration](https://github.com/magnet-inc/blue_print/tree/master/lib/blue_print/integration).\r\n\r\n## Contributing\r\n\r\n1. Fork it ( http://github.com/magnet-inc/blue_print/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}